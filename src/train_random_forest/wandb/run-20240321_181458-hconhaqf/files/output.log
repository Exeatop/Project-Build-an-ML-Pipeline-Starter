2024-03-21 18:15:01,357 Minimum price: 10, Maximum price: 350
2024-03-21 18:15:01,368 Preparing sklearn pipeline
2024-03-21 18:15:01,369 Fitting
2024-03-21 18:15:11,448 Scoring
2024-03-21 18:15:11,536 Score: 0.5339406885517419
2024-03-21 18:15:11,537 MAE: 33.565065789473685
2024-03-21 18:15:11,537 Exporting model
/home/rhino/miniconda3/envs/mlflow-d6c04384fb9356865b6d231fc3cbd1b1b9b4863e/lib/python3.9/site-packages/mlflow/models/signature.py:130: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  inputs = _infer_schema(model_input)
[34m[1mwandb[39m[22m: Adding directory to artifact (./random_forest_dir)... Done. 0.0s
Traceback (most recent call last):
  File "/home/rhino/miniconda3/envs/mlflow-d6c04384fb9356865b6d231fc3cbd1b1b9b4863e/lib/python3.9/site-packages/sklearn/pipeline.py", line 220, in __getitem__
    name, est = self.steps[ind]
TypeError: list indices must be integers or slices, not str
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "/home/rhino/Project-Build-an-ML-Pipeline-Starter/src/train_random_forest/run.py", line 297, in <module>
    go(args)
  File "/home/rhino/Project-Build-an-ML-Pipeline-Starter/src/train_random_forest/run.py", line 120, in go
    fig_feat_imp = plot_feature_importance(sk_pipe, processed_features)
  File "/home/rhino/Project-Build-an-ML-Pipeline-Starter/src/train_random_forest/run.py", line 139, in plot_feature_importance
    feat_imp = pipe["random_forest"].feature_importances_[: len(feat_names)-1]
  File "/home/rhino/miniconda3/envs/mlflow-d6c04384fb9356865b6d231fc3cbd1b1b9b4863e/lib/python3.9/site-packages/sklearn/pipeline.py", line 223, in __getitem__
    return self.named_steps[ind]
KeyError: 'random_forest'